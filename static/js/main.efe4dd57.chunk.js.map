{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","alt","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuid","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAeAA,IAASC,cAVY,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,eACnBM,MAAON,8CAKF,IAAMO,EAAmBV,IACnBW,EAAcX,IAASY,OACvBC,EAAYb,IAASc,YACrBC,EAAiBf,IAASgB,U,OCoDxBC,EArEE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GAChB,MAEIA,EADFC,OAAUC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAGL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAIVC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAKLZ,EAAYwB,+BAA+BhB,EAAOE,GAL7C,6CAOLV,EAAYyB,2BAA2BjB,EAAOE,GAPzC,yDAUbK,EAAS,KAAMW,SAVF,0DAAH,sDAgBd,OACE,qCACE,uBAAML,SAAUA,EAAUM,UAAU,YAApC,UACE,uBACER,KAAK,QACLS,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRV,MAAOZ,EACPQ,SAAUA,EACVW,UAAU,eAEZ,uBACER,KAAK,WACLS,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRV,MAAOV,EACPM,SAAUA,EACVW,UAAU,eAEZ,uBACEC,KAAK,SACLD,UAAU,yBACVP,MAAOR,EAAa,iBAAmB,WAExCE,GAAS,sBAAMa,UAAU,aAAhB,SAA8Bb,OAE1C,sBAAMiB,QA9BY,kBAAMlB,GAAc,SAACmB,GAAD,OAAWA,MA8BnBL,UAAU,cAAxC,SACGf,EAAa,UAAY,uB,gBCrBnBqB,EAnCF,WACX,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,iBAAAK,EAAA,6DAERH,EACRF,EADFC,OAAUC,KAERgB,EAAWnC,EACF,WAATmB,EACFgB,EAAW,IAAIpC,EAAiBE,KAAKmC,mBACnB,WAATjB,IACTgB,EAAW,IAAIpC,EAAiBE,KAAKoC,oBARnB,SAWdrC,EAAYsC,gBAAgBH,GAXd,2CAAH,sDAanB,OACE,sBAAKR,UAAU,iBAAf,UACE,cAAC,IAAD,CACEY,KAAMC,IACNC,MAAM,UACNC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKjB,UAAU,YAAf,UACE,yBAAQR,KAAK,SAASY,QAASG,EAAeP,UAAU,WAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMM,SAE9C,yBAAQ1B,KAAK,SAASY,QAASG,EAAeP,UAAU,WAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMO,gB,gBCuCvCC,EAxED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAA8B1C,oBAAS,GAAvC,mBAAO2C,EAAP,KAAgBC,EAAhB,KACA,EAAgC5C,mBAASyC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,sBAAAjC,EAAA,0DACTkC,OAAOC,QAAQ,+CADN,gCAIZvD,EAAUwD,IAAV,iBAAwBV,EAASW,KAAMC,SAJ3B,uBAKZxD,EAAeyD,WAAWb,EAASc,eAAeF,SALtC,2CAAH,qDASbG,EAAgB,kBAAMZ,GAAW,SAACnB,GAAD,OAAWA,MAE5CX,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAETrB,EAAUwD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAClDZ,KAAMC,IAHO,OAKfF,GAAW,GALI,2CAAH,sDAed,OACE,qBAAKxB,UAAU,QAAf,SACGuB,EACC,qCACE,uBAAM7B,SAAUA,EAAUM,UAAU,uBAApC,UACE,uBACEC,KAAK,OACLC,YAAY,kBACZT,MAAOiC,EACPvB,UAAQ,EACRmC,WAAS,EACTjD,SAlBK,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZkC,EAAYlC,IAeFO,UAAU,eAEZ,uBAAOC,KAAK,SAASR,MAAM,eAAeO,UAAU,gBAEtD,sBAAMI,QAASgC,EAAepC,UAAU,sBAAxC,uBAKF,qCACE,6BAAKqB,EAASI,OACbJ,EAASc,eACR,qBAAKI,IAAI,GAAGC,IAAKnB,EAASc,gBAE3Bb,GACC,sBAAKtB,UAAU,gBAAf,UACE,sBAAMI,QAASwB,EAAf,SACE,cAAC,IAAD,CAAiBhB,KAAM6B,QAEzB,sBAAMrC,QAASgC,EAAf,SACE,cAAC,IAAD,CAAiBxB,KAAM8B,iB,QCqCxBC,EAlGM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,EAA0BhE,mBAAS,IAAnC,mBAAOiE,EAAP,KAAcC,EAAd,KACA,EAAoClE,mBAAS,IAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KAEMtD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACfL,EAAMM,iBAEQ,KAAViD,EAHW,oDAKXV,EAAgB,GACD,KAAfY,EANW,wBAOPE,EAAgBxE,EACnByE,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,YAEKC,gBATd,SAUUJ,EAAcK,UAAUP,EAAY,YAV9C,cAUPQ,EAVO,iBAWSA,EAASL,IAAIM,iBAXtB,QAWbrB,EAXa,eAaTd,EAAW,CACfI,KAAMoB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBjB,iBAEF5D,EAAUsF,WAAW,UAAUC,IAAIzC,GACnCyB,EAAS,IACTE,EAAc,IArBC,4CAAH,sDAqDd,OACE,uBAAMtD,SAAUA,EAAUM,UAAU,eAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEP,MAAOoD,EACPxD,SAlCS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZqD,EAASrD,IA+BHQ,KAAK,OACLC,YAAY,uBACZ6D,UAAW,IACX/D,UAAU,kBAEZ,uBAAOC,KAAK,SAASR,MAAM,SAASO,UAAU,2BAEhD,wBAAOgE,IAAI,cAAchE,UAAU,sBAAnC,UACE,8CACA,cAAC,IAAD,CAAiBY,KAAMqD,SAEzB,uBACEjC,GAAG,cACH/B,KAAK,OACLiE,OAAO,UACP7E,SA3Ce,SAACC,GACpB,IAGM6E,EADF7E,EADFC,OAAU6E,MAEU,GAEtB,GAAGD,EAAQ,CACT,IAAME,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBC,EACfD,EADFE,cAAiBD,OAEnBzB,EAAcyB,IAEhBJ,EAAOM,cAAcR,KA8BnBnD,MAAO,CAAE4D,QAAS,KAEnB7B,GACC,sBAAK/C,UAAU,0BAAf,UACE,qBACEuC,IAAI,GACJC,IAAKO,EACL/B,MAAO,CAAE6D,gBAAiB9B,KAE5B,sBAAK/C,UAAU,qBAAqBI,QAnClB,WACxB4C,EAAc,KAkCR,UACE,0CACA,cAAC,IAAD,CAAiBpC,KAAMkE,gBC3DpBC,EAhCF,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QACd,EAA4BhE,mBAAS,IAArC,mBAAOoG,EAAP,KAAeC,EAAf,KAeA,OAbAC,qBAAU,WACR3G,EACGsF,WAAW,UACXsB,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACX,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACzD,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAI0D,WAETR,EAAUK,QAEb,IAGD,sBAAKtF,UAAU,YAAf,UACE,cAAC,EAAD,CAAc4C,QAASA,IACvB,qBAAK5B,MAAO,CAAE0E,UAAW,IAAzB,SACGV,EAAOQ,KAAI,SAAC3C,GAAD,OACV,cAAC,EAAD,CAEExB,SAAUwB,EACVvB,QAASuB,EAAMe,YAAchB,EAAQQ,KAFhCP,EAAMb,aC+BR2D,EAtDC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAahD,EAAc,EAAdA,QACxBiD,EAAUC,cAChB,EAA4ClH,mBAASgE,EAAQmD,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAaMC,EAAW,uCAAG,sBAAAvG,EAAA,sEACZpB,EACHsF,WAAW,UACXsC,MAAM,YAAa,KAAMvD,EAAQQ,KACjCgD,MAJe,2CAAH,qDAOX1G,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACFgD,EAAQmD,cAAgBC,EAFb,gCAGPpD,EAAQyD,cAAc,CAAEN,YAAaC,IAH9B,OAIbJ,IAJa,2CAAH,sDAYd,OAJAV,qBAAU,WACRgB,MACC,IAGD,sBAAKlG,UAAU,YAAf,UACE,uBAAMN,SAAUA,EAAUM,UAAU,eAApC,UACE,uBACEC,KAAK,OACLC,YAAY,eACZT,MAAOuG,EACP3G,SAjCS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZwG,EAAkBxG,IA8BZ6C,WAAS,EACTtC,UAAU,eAEZ,uBAAOC,KAAK,SAASR,MAAM,iBAAiBO,UAAU,WAAWgB,MAAO,CAAC0E,UAAW,SAEtF,sBAAM1F,UAAU,6BAA6BI,QA5C3B,WACpB/B,EAAYiI,UACZT,EAAQU,KAAK,MA0CX,yB,QCdSC,EA/BI,SAAC,GAAD,IAAG5D,EAAH,EAAGA,QAAH,OACjB,8BACE,qBAAI5B,MAAO,CAAEyF,QAAS,OAAQC,eAAgB,SAAUhB,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAMiB,GAAG,IAAT,SACE,cAAC,IAAD,CAAiB/F,KAAMC,IAAWC,MAAM,UAAUC,KAAK,WAG3D,6BACE,eAAC,IAAD,CACE4F,GAAG,WACH3F,MAAO,CACL4F,WAAY,GACZH,QAAS,OACTI,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiBnG,KAAMoG,IAAQlG,MAAM,UAAUC,KAAK,OACpD,sBAAMC,MAAO,CAAE0E,UAAW,IAA1B,SACG9C,EAAQmD,YAAR,UACMnD,EAAQmD,YADd,kBAEG,uBCWDkB,EAjCG,SAAC,GAA0C,IAAxCrB,EAAuC,EAAvCA,YAAasB,EAA0B,EAA1BA,WAAYtE,EAAc,EAAdA,QAC5C,OACE,eAAC,IAAD,WACGsE,GAAc,cAAC,EAAD,CAAYtE,QAASA,IACpC,cAAC,IAAD,UACGsE,EACC,sBACElG,MAAO,CACLmG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR3B,UAAW,GACXe,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM3E,QAASA,MAEjB,cAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAS3E,QAASA,EAASgD,YAAaA,SAI5C,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,YCiBGC,MA7Cf,WACE,MAAwB5I,oBAAS,GAAjC,mBAAO6I,EAAP,KAAaC,EAAb,KACA,EAAoC9I,oBAAS,GAA7C,mBAAOsI,EAAP,KAAmBS,EAAnB,KACA,EAA8B/I,mBAAS,MAAvC,mBAAOgE,EAAP,KAAgBgF,EAAhB,KA2BA,OAzBA1C,qBAAU,WACR7G,EAAYwJ,oBAAmB,SAACC,GAC1BA,GACFH,GAAc,GACdC,EAAW,CACT7B,YAAa+B,EAAK/B,YAClB3C,IAAK0E,EAAK1E,IACViD,cAAe,SAAC0B,GAAD,OAAUD,EAAKzB,cAAc0B,OAG9CJ,GAAc,GAEhBD,GAAQ,QAET,IAYD,mCACGD,EACC,cAAC,EAAD,CACE7B,YAbY,WAClB,IAAMkC,EAAOzJ,EAAY2J,YACzBJ,EAAW,CACT7B,YAAa+B,EAAK/B,YAClB3C,IAAK0E,EAAK1E,IACViD,cAAe,SAAC0B,GAAD,OAAUD,EAAKzB,cAAc0B,OASxCb,WAAYA,EACZtE,QAASA,IAGX,qB,MCtCRqF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.efe4dd57.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\nimport React, { useState } from 'react';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"auth-input\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"auth-input\"\n        />\n        <input\n          type=\"submit\"\n          className=\"auth-input auth-submit\"\n          value={newAccount ? 'Create Account' : 'Log In'}\n        />\n        {error && <span className=\"auth-error\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"auth-switch\">\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport AuthForm from 'components/AuthForm';\nimport { authService, firebaseInstance } from '../fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider = authService;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"auth-container\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color=\"#04AAFF\"\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"auth-btns\">\n        <button name=\"google\" onClick={onSocialClick} className=\"auth-btn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onSocialClick} className=\"auth-btn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\n\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweet-edit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"form-input\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"form-btn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"form-btn cancel-btn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img alt=\"\" src={nweetObj.attachmentUrl} />\n          )}\n          {isOwner && (\n            <div className=\"nweet-actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    \n    if (nweet === '') return;\n\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuid()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setAttachment('');\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n\n    if(theFile){\n      const reader = new FileReader();\n      reader.onloadend = (finishedEvent) => {\n        const {\n          currentTarget: { result },\n        } = finishedEvent;\n        setAttachment(result);\n      };\n      reader.readAsDataURL(theFile);\n    }\n  };\n\n  const onClearAttachment = () => {\n    setAttachment('');\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factory-form\">\n      <div className=\"factory-input-container\">\n        <input\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          className=\"factory-input\"\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factory-input-arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factory-input-label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && (\n        <div className=\"factory-form-attachment\">\n          <img\n            alt=\"\"\n            src={attachment}\n            style={{ backgroundImage: attachment }}\n          />\n          <div className=\"factory-form-clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from 'react';\nimport Nweet from 'components/Nweet';\nimport { dbService } from 'fbase';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection('nweets')\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { authService, dbService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const getMyNweets = async () => {\n    await dbService\n      .collection('nweets')\n      .where('creatorId', '==', userObj.uid)\n      .get();\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profile-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n          autoFocus\n          className=\"form-input\"\n        />\n        <input type=\"submit\" value=\"Update Profile\" className=\"form-btn\" style={{marginTop: 10,}} />\n      </form>\n      <span className=\"form-btn cancel-btn logout\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n      <li>\n        <Link to=\"/\">\n          <FontAwesomeIcon icon={faTwitter} color=\"#04AAFF\" size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color=\"#04AAFF\" size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : 'Profile'}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}